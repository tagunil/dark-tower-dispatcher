/*****************************************************************************
* Model: kaCounter.qm
* File:  ./kaCounter.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${.::kaCounter.h} ........................................................*/
#ifndef kaCounter_h
#define kaCounter_h
#ifdef __cplusplus
extern "C" {
#endif

#include "qhsm.h"    /* include own framework */
#include "localcharacter.h"

#define KATET_THRESHOLD 750


class Dispatcher;

/*${SMs::KaCounter} ........................................................*/
typedef struct {
/* protected: */
    QHsm super;

/* public: */
    Dispatcher* dispatcher;
    KaTetCounters* KaTetTimers;
    KaTetLinks* KaTets;
    size_t CurrentId;
} KaCounter;

/* protected: */
QState KaCounter_initial(KaCounter * const me, QEvt const * const e);
QState KaCounter_global(KaCounter * const me, QEvt const * const e);
QState KaCounter_ka_tet_counter(KaCounter * const me, QEvt const * const e);
QState KaCounter_idle(KaCounter * const me, QEvt const * const e);
QState KaCounter_ka_tet_forming(KaCounter * const me, QEvt const * const e);

#ifdef DESKTOP
QState KaCounter_final(KaCounter * const me, QEvt const * const e);
#endif /* def DESKTOP */





typedef struct KaCounterQEvt {
    QEvt super;
    size_t id;
} KaCounterQEvt;


/*${SMs::KaCounter_ctor} ...................................................*/
void KaCounter_ctor(
    KaCounter* me,
    Dispatcher* dispatcher,
    KaTetCounters* KaTetTimers,
    KaTetLinks* KaTets);

#ifdef __cplusplus
}
#endif
#endif /* kaCounter_h */
